{"name":"RailsMagicRenamer","tagline":"Comprehensive object renaming for Rails projects","body":"[![Build Status](https://img.shields.io/travis/nickdowse/rails_magic_renamer.svg)](https://travis-ci.org/nickdowse/rails_magic_renamer) [![Code Climate](https://codeclimate.com/github/nickdowse/rails_magic_renamer/badges/gpa.svg)](https://codeclimate.com/github/nickdowse/rails_magic_renamer) \r\n[![Test Coverage](https://codeclimate.com/github/nickdowse/rails_magic_renamer/badges/coverage.svg)](https://codeclimate.com/github/nickdowse/rails_magic_renamer/coverage)\r\n  \r\n\r\n# RAILS MAGIC RENAMER\r\n\r\nThis repository is currently a work in progress, until the time that it's ready check out [https://github.com/jcrisp/rails_refactor](https://github.com/jcrisp/rails_refactor) for the original work. For a view of the direction this gem is going take a look at the ROADMAP.md. A quick overview: this gem aims to be an all in one set and forget gem for renaming models in rails projects, meaning you can pass it the model name you have, the model name you want it to be and it will rename files, rename models, update relationships, rename controllers, views, instances of the class, create new database migrations, and update the specs. Sounds scary? It won't run any DB migrations, so you can set it, and then if it works just commit the changes to source control and you're away.\r\n\r\n### Basic renames and refactorings for rails projects.\r\nAlthough these are not perfect, they'll do a lot of the work for you \r\nand save you time. \r\n\r\nBefore using, I recommend that you start from a clean repository state so \r\nyou can easily review changes.\r\n\r\nTo install:\r\n    `gem install rails_magic_renamer`\r\n\r\nBefore use, make sure you cd to the root of your rails project.\r\n\r\nTo rename an object open up `rails console` and run:\r\n\r\n    require 'rails_magic_renamer'\r\n    RailsMagicRenamer::Renamer.new(\"from_model\", \"to_model\").rename\r\n\r\nThis will:\r\n\r\n* rename the controller file & class name in file\r\n* rename the controller spec file & class name in file\r\n* rename the view directory\r\n* rename the helper file & module name in file\r\n* updates routes\r\n* rename the model file & class name in file\r\n* rename the spec file & class name in file\r\n* rename the migration & class name & table names in file\r\n\r\n# Contributing\r\n\r\nWe love your contributions to RailsMagicRenamer. Before submitting a pull request, please make sure that your changes are well tested.\r\n\r\nThen, you'll need to install bundler and the gem dependencies:\r\n\r\n  `gem install bundler && bundle install`\r\n\r\n  You should now be able to run the local tests:\r\n\r\n    bundle exec rake\r\n\r\nInteract with rails_magic_renamer by creating a RailsMagicRenamer instance, and then calling `rename` on that instance.\r\n  \r\n    RailsMagicRenamer::Renamer.new(\"CurrentModelName\", \"NewModelName\").rename\r\n\r\nStarted by James Crisp & Ryan Bigg pairing at RORO hack night 24 Nov 2010.\r\nThanks to Andrew Snow for help with Gemification.\r\n\r\nThanks to Tricon for some improvements and start on TextMate Bundle:\r\nhttps://github.com/Tricon/rails-refactor.tmbundle\r\n\r\nAny questions open an issue or hit me up on Twitter: [@nmdowse](https://twitter.com/nmdowse).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}